FROM node:20-alpine AS base
WORKDIR /app
COPY package*.json ./

# Instalação de dependências (com devDependencies para testes)
FROM base AS deps
RUN npm ci --omit=optional
COPY . .

# Estágio de testes (usa lint como verificação neste projeto)
FROM deps AS test
ENV NODE_ENV=development
RUN npm run lint

# Estágio de build (somente se testes passarem)
FROM deps AS build
ENV NODE_ENV=production
RUN npm run build

# Runtime NGINX servindo os artefatos
FROM nginx:1.27-alpine AS runtime
RUN rm -f /etc/nginx/conf.d/default.conf
RUN printf '%s\n' \
  'server {' \
  '  listen 80;' \
  '  server_name _;' \
  '  root /usr/share/nginx/html;' \
  '  include /etc/nginx/mime.types;' \
  '  index index.html;' \
  '  location / {' \
  '    try_files $uri $uri/ /index.html;' \
  '  }' \
  '  location ~* \\.(js|css|svg|png|jpg|jpeg|gif|ico|woff2?)$ {' \
  '    add_header Cache-Control "public, max-age=31536000, immutable";' \
  '  }' \
  '}' \
  > /etc/nginx/conf.d/app.conf
COPY --from=build /app/dist /usr/share/nginx/html
EXPOSE 80
HEALTHCHECK --interval=30s --timeout=3s --retries=3 CMD wget -qO- http://localhost/ || exit 1
CMD ["nginx", "-g", "daemon off;"]


